version: '3.8'

services:
  ros1:
    image: ericroboticsindia/cube_stack:noetic_latest
    command: bash -c "source /opt/ros/noetic/setup.bash && source /catkin_ws/devel/setup.bash && roslaunch cube_hardware rosserial_bringup.launch"
    # command: bash -c "source /opt/ros/noetic/setup.bash && roscore"
    volumes:
      - "~/CUB_E/ros1:/catkin_ws/src"
    # deploy:
      # replicas: 1
      # resources:
      #   limits:
      #     cpus: "0.2"
      #     memory: 1G 
      # restart_policy:
      #   condition: on-failure
    devices:
      - "/dev/arduino_mega:/dev/arduino_mega"
  

  ros2:
    image: ericroboticsindia/cube_stack:humble_latest
    command: bash -c "source /opt/ros/humble/setup.bash && source /colcon_ws/install/setup.bash && ros2 launch cube_hardware hardwarebringup.launch.py"
    depends_on:
      - bridge
      - ros1
    network_mode: "host"
    volumes:
      - "~/CUB_E/ros2:/colcon_ws/src"
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    devices:
      - "/dev/bno055:/dev/bno055"
      - "/dev/ydlidar_g2:/dev/ydlidar_g2"

  bridge:
    image: ericroboticsindia/cube_stack:humble_bridge_v2.0.1
    environment:
      - "ROS_HOSTNAME=bridge"
      - "ROS_MASTER_URI=http://ros1:11311"
    command: bash -c "source /opt/ros/noetic/setup.bash && source /ros2_humble/install/setup.bash && source /ros2_depend/install/setup.bash && ros2 run ros1_bridge dynamic_bridge"
    depends_on:
      - ros1
    # deploy:
    #   restart_policy:
    #     condition: on-failure
